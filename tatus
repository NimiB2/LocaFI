warning: in the working copy of 'app/src/main/java/dev/nimrod/locafi/ui/activities/MainActivity.java', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/src/main/java/dev/nimrod/locafi/ui/activities/WifiManagement.java', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/src/main/res/layout/activity_main.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app/src/main/res/values/strings.xml', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml[m
[1mindex 6381c02..9c7d1d9 100644[m
[1m--- a/app/src/main/AndroidManifest.xml[m
[1m+++ b/app/src/main/AndroidManifest.xml[m
[36m@@ -6,6 +6,10 @@[m
     <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />[m
     <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />[m
 [m
[32m+[m[32m    <!-- LOCATION permissions -->[m
[32m+[m[32m    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>[m
[32m+[m[32m    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>[m
[32m+[m
     <!-- Hardware feature declaration -->[m
     <uses-feature android:name="android.hardware.wifi" android:required="true" />[m
 [m
[1mdiff --git a/app/src/main/java/dev/nimrod/locafi/models/Circle.java b/app/src/main/java/dev/nimrod/locafi/models/Circle.java[m
[1mindex 2632a60..023306f 100644[m
[1m--- a/app/src/main/java/dev/nimrod/locafi/models/Circle.java[m
[1m+++ b/app/src/main/java/dev/nimrod/locafi/models/Circle.java[m
[36m@@ -1,4 +1,27 @@[m
 package dev.nimrod.locafi.models;[m
 [m
[32m+[m[32mimport android.graphics.PointF;[m
[32m+[m
 public class Circle {[m
[32m+[m[32m    private final PointF center;[m
[32m+[m[32m    private final float radius;[m
[32m+[m[32m    private final float weight; // Based on signal strength[m
[32m+[m
[32m+[m[32m    public Circle(PointF center, float radius, float weight) {[m
[32m+[m[32m        this.center = center;[m
[32m+[m[32m        this.radius = radius;[m
[32m+[m[32m        this.weight = weight;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public PointF getCenter() {[m
[32m+[m[32m        return center;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public float getRadius() {[m
[32m+[m[32m        return radius;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public float getWeight() {[m
[32m+[m[32m        return weight;[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/app/src/main/java/dev/nimrod/locafi/models/LocationResult.java b/app/src/main/java/dev/nimrod/locafi/models/LocationResult.java[m
[1mindex 692e622..79d5053 100644[m
[1m--- a/app/src/main/java/dev/nimrod/locafi/models/LocationResult.java[m
[1m+++ b/app/src/main/java/dev/nimrod/locafi/models/LocationResult.java[m
[36m@@ -1,4 +1,29 @@[m
 package dev.nimrod.locafi.models;[m
 [m
[32m+[m[32mimport android.graphics.PointF;[m
[32m+[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
 public class LocationResult {[m
[32m+[m[32m    private final PointF position;     // Calculated user position[m
[32m+[m[32m    private final float confidence;    // Confidence level (0-1)[m
[32m+[m[32m    private final List<Circle> circles; // WiFi circles for visualization[m
[32m+[m
[32m+[m[32m    public LocationResult(PointF position, float confidence, List<Circle> circles) {[m
[32m+[m[32m        this.position = position;[m
[32m+[m[32m        this.confidence = confidence;[m
[32m+[m[32m        this.circles = circles;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public PointF getPosition() {[m
[32m+[m[32m        return position;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public float getConfidence() {[m
[32m+[m[32m        return confidence;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public List<Circle> getCircles() {[m
[32m+[m[32m        return circles;[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/app/src/main/java/dev/nimrod/locafi/ui/activities/MainActivity.java b/app/src/main/java/dev/nimrod/locafi/ui/activities/MainActivity.java[m
[1mindex 3e9bd46..ad61069 100644[m
[1m--- a/app/src/main/java/dev/nimrod/locafi/ui/activities/MainActivity.java[m
[1m+++ b/app/src/main/java/dev/nimrod/locafi/ui/activities/MainActivity.java[m
[36m@@ -6,11 +6,14 @@[m [mimport android.content.Context;[m
 import android.content.Intent;[m
 import android.content.IntentFilter;[m
 import android.content.pm.PackageManager;[m
[32m+[m[32mimport android.location.Location;[m
[32m+[m[32mimport android.location.LocationManager;[m
 import android.net.Uri;[m
 import android.net.wifi.ScanResult;[m
 import android.net.wifi.WifiManager;[m
 import android.os.Bundle;[m
 import android.provider.Settings;[m
[32m+[m[32mimport android.util.Log;[m
 import android.view.View;[m
 import android.widget.FrameLayout;[m
 import android.widget.Toast;[m
[36m@@ -28,6 +31,7 @@[m [mimport com.google.android.material.button.MaterialButton;[m
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;[m
 import com.google.android.material.snackbar.Snackbar;[m
 [m
[32m+[m[32mimport java.lang.reflect.Constructor;[m
 import java.util.ArrayList;[m
 import java.util.Arrays;[m
 import java.util.List;[m
[36m@@ -38,8 +42,9 @@[m [mimport dev.nimrod.locafi.R;[m
 import dev.nimrod.locafi.models.WifiPoint;[m
 import dev.nimrod.locafi.ui.adapters.WifiListAdapter;[m
 import dev.nimrod.locafi.ui.views.LocationView;[m
[32m+[m[32mimport dev.nimrod.locafi.utils.GpsLocationManager;[m
 [m
[31m-public class MainActivity extends AppCompatActivity {[m
[32m+[m[32mpublic class MainActivity extends AppCompatActivity implements GpsLocationManager.LocationUpdateListener {[m
     private static final int PERMISSION_REQUEST_CODE = 100;[m
     private static final String TAG = "MainActivity";[m
 [m
[36m@@ -49,6 +54,8 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
     private MaterialButton manageButton;[m
     private FrameLayout visualizationContainer;[m
     private WifiListAdapter wifiListAdapter;[m
[32m+[m[32m    private GpsLocationManager gpsLocationManager;[m
[32m+[m[32m    private LocationView locationView;[m
 [m
     // Utilities[m
     private WifiManager wifiManager;[m
[36m@@ -62,16 +69,51 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
 [m
         initializeViews();[m
         initializeServices();[m
[32m+[m[32m        Log.d(TAG, "WiFi enabled: " + wifiManager.isWifiEnabled());[m
         showDisclaimerDialog();[m
         setupListeners();[m
         setupRecyclerView();[m
         checkPermissions();[m
[32m+[m
     }[m
 [m
     private void initializeServices() {[m
         wifiManager = (WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE);[m
[32m+[m[32m        Log.d(TAG, "WiFi State Check:");[m
[32m+[m[32m        Log.d(TAG, "WiFi Manager initialized: " + (wifiManager != null));[m
[32m+[m[32m        Log.d(TAG, "WiFi Enabled: " + wifiManager.isWifiEnabled());[m
[32m+[m[32m        Log.d(TAG, "WiFi State: " + getWifiStateString(wifiManager.getWifiState()));[m
[32m+[m
[32m+[m[32m        gpsLocationManager = new GpsLocationManager(this);[m
[32m+[m[32m        gpsLocationManager.setLocationUpdateListener(this);[m
[32m+[m[32m    }[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onLocationUpdate(Location location) {[m
[32m+[m[32m        if (locationView != null) {[m
[32m+[m[32m            locationView.setRealPosition(location);[m
[32m+[m[32m        }[m
     }[m
 [m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onLocationError(String error) {[m
[32m+[m[32m        Toast.makeText(this, error, Toast.LENGTH_SHORT).show();[m
[32m+[m[32m    }[m
[32m+[m[32m    private String getWifiStateString(int state) {[m
[32m+[m[32m        switch (state) {[m
[32m+[m[32m            case WifiManager.WIFI_STATE_DISABLED:[m
[32m+[m[32m                return "DISABLED";[m
[32m+[m[32m            case WifiManager.WIFI_STATE_DISABLING:[m
[32m+[m[32m                return "DISABLING";[m
[32m+[m[32m            case WifiManager.WIFI_STATE_ENABLED:[m
[32m+[m[32m                return "ENABLED";[m
[32m+[m[32m            case WifiManager.WIFI_STATE_ENABLING:[m
[32m+[m[32m                return "ENABLING";[m
[32m+[m[32m            case WifiManager.WIFI_STATE_UNKNOWN:[m
[32m+[m[32m                return "UNKNOWN";[m
[32m+[m[32m            default:[m
[32m+[m[32m                return "UNDEFINED STATE: " + state;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
     private void initializeViews() {[m
         // Initialize toolbar[m
         MaterialToolbar toolbar = findViewById(R.id.main_MTB_toolbar);[m
[36m@@ -99,6 +141,9 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
             Intent intent = new Intent(this, WifiManagement.class);[m
             startActivity(intent);[m
         });[m
[32m+[m
[32m+[m[32m        MaterialButton mockButton = findViewById(R.id.main_BTN_mock);[m
[32m+[m[32m        mockButton.setOnClickListener(v -> addMockWifiNetworks());[m
     }[m
 [m
     private void setupRecyclerView() {[m
[36m@@ -110,7 +155,9 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
     private void checkPermissions() {[m
         String[] permissions = {[m
                 Manifest.permission.ACCESS_WIFI_STATE,[m
[31m-                Manifest.permission.CHANGE_WIFI_STATE[m
[32m+[m[32m                Manifest.permission.CHANGE_WIFI_STATE,[m
[32m+[m[32m                Manifest.permission.ACCESS_FINE_LOCATION[m
[32m+[m
         };[m
 [m
         if (!hasPermissions(permissions)) {[m
[36m@@ -129,21 +176,118 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
     }[m
 [m
     private void startWifiScan() {[m
[32m+[m[32m        Log.d(TAG, "Starting WiFi scan...");[m
[32m+[m
         if (!wifiManager.isWifiEnabled()) {[m
[32m+[m[32m            Log.d(TAG, "WiFi is disabled");[m
             showEnableWifiDialog();[m
             return;[m
         }[m
 [m
[32m+[m[32m        if (!isLocationEnabled()) {[m
[32m+[m[32m            Log.d(TAG, "Location is disabled");[m
[32m+[m[32m            showEnableLocationDialog();[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if (!checkScanPermission()) {[m
[32m+[m[32m            Log.d(TAG, "Missing required permissions");[m
[32m+[m[32m            checkPermissions();[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m
         boolean success = wifiManager.startScan();[m
[32m+[m[32m        Log.d(TAG, "Scan initiated: " + success);[m
[32m+[m
         if (!success) {[m
[31m-            Toast.makeText(this, "Failed to start Wi-Fi scan", Toast.LENGTH_SHORT).show();[m
[32m+[m[32m            Log.d(TAG, "Scan failed - trying to get cached results");[m
[32m+[m[32m            List<ScanResult> cachedResults = wifiManager.getScanResults();[m
[32m+[m[32m            Log.d(TAG, "Found " + cachedResults.size() + " cached networks");[m
[32m+[m
[32m+[m[32m            if (!cachedResults.isEmpty()) {[m
[32m+[m[32m                Log.d(TAG, "Using cached results");[m
[32m+[m[32m                List<ScanResult> filteredResults = filterAndSortResults(cachedResults);[m
[32m+[m[32m                updateVisibility(!filteredResults.isEmpty());[m
[32m+[m[32m                wifiListAdapter.updateData(filteredResults);[m
[32m+[m[32m                updateVisualization(filteredResults);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                Log.d(TAG, "No cached results available");[m
[32m+[m[32m                Toast.makeText(this, "WiFi scan throttled. Please try again in a few seconds.",[m
[32m+[m[32m                        Toast.LENGTH_SHORT).show();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private void addMockWifiNetworks() {[m
[32m+[m[32m        // Create list for mock results[m
[32m+[m[32m        List<ScanResult> mockResults = new ArrayList<>();[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            // Using reflection to create ScanResult objects[m
[32m+[m[32m            Class<?> scanResultClass = ScanResult.class;[m
[32m+[m[32m            Constructor<?> constructor = scanResultClass.getDeclaredConstructor();[m
[32m+[m[32m            constructor.setAccessible(true);[m
[32m+[m
[32m+[m[32m            // Define mock networks[m
[32m+[m[32m            String[] networks = {[m
[32m+[m[32m                    "Home_WiFi",[m
[32m+[m[32m                    "Office_Network",[m
[32m+[m[32m                    "Guest_WiFi",[m
[32m+[m[32m                    "Coffee_Shop",[m
[32m+[m[32m                    "Library_WiFi"[m
[32m+[m[32m            };[m
[32m+[m
[32m+[m[32m            // Different signal strengths (in dBm)[m
[32m+[m[32m            int[] signalStrengths = {[m
[32m+[m[32m                    -45,  // Very strong signal[m
[32m+[m[32m                    -60,  // Good signal[m
[32m+[m[32m                    -70,  // Moderate signal[m
[32m+[m[32m                    -80,  // Weak signal[m
[32m+[m[32m                    -85   // Very weak signal[m
[32m+[m[32m            };[m
[32m+[m
[32m+[m[32m            // Create mock network entries[m
[32m+[m[32m            for (int i = 0; i < networks.length; i++) {[m
[32m+[m[32m                ScanResult mockResult = (ScanResult) constructor.newInstance();[m
[32m+[m[32m                mockResult.SSID = networks[i];[m
[32m+[m[32m                mockResult.BSSID = String.format("00:11:22:33:44:%02X", i);[m
[32m+[m[32m                mockResult.level = signalStrengths[i];[m
[32m+[m[32m                mockResult.frequency = 2437; // Channel 6[m
[32m+[m[32m                mockResults.add(mockResult);[m
[32m+[m
[32m+[m[32m                Log.d(TAG, "Created mock network: " + mockResult.SSID +[m
[32m+[m[32m                        " with signal strength: " + mockResult.level + "dBm");[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            // Update UI with mock results[m
[32m+[m[32m            List<ScanResult> filteredResults = filterAndSortResults(mockResults);[m
[32m+[m[32m            updateVisibility(!filteredResults.isEmpty());[m
[32m+[m[32m            wifiListAdapter.updateData(filteredResults);[m
[32m+[m[32m            updateVisualization(filteredResults);[m
[32m+[m
[32m+[m[32m        } catch (Exception e) {[m
[32m+[m[32m            Log.e(TAG, "Error creating mock networks", e);[m
[32m+[m[32m            Toast.makeText(this, "Failed to create mock networks", Toast.LENGTH_SHORT).show();[m
         }[m
     }[m
 [m
[32m+[m[32m    private void showEnableLocationDialog() {[m
[32m+[m[32m        new MaterialAlertDialogBuilder(this)[m
[32m+[m[32m                .setTitle("Location Required")[m
[32m+[m[32m                .setMessage("Android requires location services to be enabled for WiFi scanning")[m
[32m+[m[32m                .setPositiveButton("Enable", (dialog, which) -> {[m
[32m+[m[32m                    Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);[m
[32m+[m[32m                    startActivity(intent);[m
[32m+[m[32m                })[m
[32m+[m[32m                .setNegativeButton("Cancel", null)[m
[32m+[m[32m                .show();[m
[32m+[m[32m    }[m
     private final BroadcastReceiver wifiScanReceiver = new BroadcastReceiver() {[m
         @Override[m
         public void onReceive(Context context, Intent intent) {[m
             boolean success = intent.getBooleanExtra(WifiManager.EXTRA_RESULTS_UPDATED, false);[m
[32m+[m[32m            Log.d(TAG, "Scan completed. Success: " + success);[m
[32m+[m
             if (success) {[m
                 scanSuccess();[m
             } else {[m
[36m@@ -151,7 +295,6 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
             }[m
         }[m
     };[m
[31m-[m
     private void scanSuccess() {[m
         List<ScanResult> results = getScanResults();[m
         List<ScanResult> filteredResults = filterAndSortResults(results);[m
[36m@@ -194,13 +337,20 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
         return new ArrayList<>();[m
     }[m
 [m
[32m+[m[32m    private boolean isLocationEnabled() {[m
[32m+[m[32m        LocationManager locationMana